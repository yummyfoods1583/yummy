CREATE TABLE DISTRICT(
  DIST_NAME VARCHAR(100) CONSTRAINT DISTRICT_PK PRIMARY KEY,
  DIST_PHOTO VARCHAR(2000)
);

CREATE SEQUENCE SUB_DIST_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;


CREATE TABLE SUB_DISTRICT(
  SUB_DIST_ID NUMERIC DEFAULT  NEXTVAL('SUB_DIST_ID_SEQ') CONSTRAINT SUB_DISTRICT_PK PRIMARY KEY,
  DIST_NAME VARCHAR(100) NOT NULL,
  SUB_DIST_NAME VARCHAR(100) NOT NULL,
  CONSTRAINT SUB_DISTRICT_FK1 FOREIGN KEY (DIST_NAME) REFERENCES DISTRICT(DIST_NAME)
) ;


CREATE TABLE USERS(
  USER_ID VARCHAR(30) CONSTRAINT USER_PK PRIMARY KEY CHECK (REGEXP_LIKE(USER_ID, '^[a-z][a-z0-9._-]{4,29}$')),
  USER_TYPE VARCHAR(5) NOT NULL CHECK(USER_TYPE IN ('ADM','RES','CUS','RID')),
  NAME VARCHAR(100) NOT NULL,
  PASSWORD VARCHAR(50) NOT NULL CHECK (
  REGEXP_LIKE(PASSWORD, '^(?=.*[A-Za-z])(?=.*\d).{8,50}$')),
  MOBILE VARCHAR(15) NOT NULL
);

CREATE TABLE ADMIN(
  ADMIN_ID VARCHAR(30) CONSTRAINT ADMIN_PK PRIMARY KEY,
  EMAIL VARCHAR(254) NOT NULL CHECK (REGEXP_LIKE(EMAIL, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')
  ),
  COMMISSION_PCT NUMERIC CHECK(COMMISSION_PCT>0 AND COMMISSION_PCT<0.5),
  CONSTRAINT ADMIN_FK1 FOREIGN KEY (ADMIN_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE CUSTOMER(
  CUSTOMER_ID VARCHAR(30) CONSTRAINT CUSTOMER_PK PRIMARY KEY,
  EMAIL VARCHAR(254) CHECK (REGEXP_LIKE(EMAIL, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')
  ),
  PHOTO_URL VARCHAR(2000),
  DETAILS VARCHAR(4000),
  SUB_DIST_ID NUMERIC,
  CONSTRAINT CUSTOMER_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES USERS(USER_ID)
  ON DELETE CASCADE,
  CONSTRAINT CUSTOMER_FK2 FOREIGN KEY (SUB_DIST_ID) REFERENCES SUB_DISTRICT(SUB_DIST_ID)
  ON DELETE SET NULL
);

CREATE TABLE RESTAURANT(
  REST_ID VARCHAR(30) CONSTRAINT RESTAURANT_PK PRIMARY KEY,
  SUB_DIST_ID NUMERIC NOT NULL,
  EMAIL VARCHAR(254) CHECK (REGEXP_LIKE(EMAIL, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')
  ),
  OPENING_TIME TIMESTAMP NOT NULL,
  CLOSING_TIME TIMESTAMP NOT NULL,
  CLOSE_UNTIL TIMESTAMP,
  REST_DETAILS VARCHAR(4000),
  MANAGER_NAME VARCHAR(100) NOT NULL,
  PHOTO_URL VARCHAR(2000),
  PAYMENT_METHOD VARCHAR(10) NOT NULL CHECK(PAYMENT_METHOD IN ('COD', 'ONLINE', 'BOTH')),
  RATING NUMERIC CHECK(RATING >=0 AND RATING <=5),
  DETAILED_ADDRESS VARCHAR(500) NOT NULL,
  CONSTRAINT RESTAURANT_FK1 FOREIGN KEY (REST_ID) REFERENCES USERS(USER_ID),
  CONSTRAINT RESTAURANT_FK2 FOREIGN KEY (SUB_DIST_ID) REFERENCES SUB_DISTRICT(SUB_DIST_ID)
);

CREATE TABLE CATEGORY(
  CATEGORY_NAME VARCHAR(50) CONSTRAINT CATEGORY_PK PRIMARY KEY
);

CREATE SEQUENCE DISH_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;

CREATE TABLE DISH(
  DISH_ID NUMERIC DEFAULT  NEXTVAL('DISH_ID_SEQ') CONSTRAINT DISH_PK PRIMARY KEY,
  REST_ID VARCHAR(30) NOT NULL,
  DISH_NAME VARCHAR(100) NOT NULL,
  DISH_DETAILS VARCHAR(4000) NOT NULL,
  DISCOUNT NUMERIC CHECK(DISCOUNT>=0 AND DISCOUNT<=1),
  AVAILABLE_AMOUNT NUMERIC NOT NULL CHECK (AVAILABLE_AMOUNT>=0 AND MOD(AVAILABLE_AMOUNT,1)=0),
  PHOTO_URL VARCHAR(2000),
  RATING NUMERIC CHECK(RATING >=0 AND RATING <=5),
  CONSTRAINT DISH_FK1 FOREIGN KEY (REST_ID) REFERENCES RESTAURANT(REST_ID)
  ON DELETE CASCADE
);

CREATE TABLE DISH_CATEGORY_LINKER(
  DISH_ID NUMERIC,
  CATEGORY_NAME VARCHAR(50),
  CONSTRAINT DISH_CATEGORY_LINKER_PK PRIMARY KEY (DISH_ID, CATEGORY_NAME),
  CONSTRAINT DISH_CATEGORY_LINKER_FK1 FOREIGN KEY (DISH_ID) REFERENCES DISH(DISH_ID)
  ON DELETE CASCADE,
  CONSTRAINT DISH_CATEGORY_LINKER_FK2 FOREIGN KEY (CATEGORY_NAME) REFERENCES CATEGORY(CATEGORY_NAME)
  ON DELETE CASCADE
);

CREATE TABLE RIDER(
  RIDER_ID VARCHAR(30) CONSTRAINT RIDER_PK PRIMARY KEY,
  CURR_SUB_DIST NUMERIC NOT NULL,
  EMAIL VARCHAR(254) CHECK (REGEXP_LIKE(EMAIL, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')
  ),
  RIDER_DETAILS VARCHAR(4000),
  PHOTO_URL VARCHAR(2000) NOT NULL,
  CONSTRAINT RIDER_FK1 FOREIGN KEY (RIDER_ID) REFERENCES USERS(USER_ID)
  ON DELETE CASCADE
);

CREATE SEQUENCE SUB_CAT_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;

CREATE TABLE DISH_SUB_CATEGORY(
  SUB_CAT_ID NUMERIC DEFAULT  NEXTVAL('SUB_CAT_ID_SEQ') CONSTRAINT DISH_SUB_CATEGORY_PK PRIMARY KEY,
  SUB_CAT_NAME VARCHAR(50) NOT NULL,
  DISH_ID NUMERIC NOT NULL,
  PRICE NUMERIC NOT NULL CHECK (PRICE >=0),
  CONSTRAINT DISH_SUB_CATEGORY_FK1 FOREIGN KEY (DISH_ID) REFERENCES DISH(DISH_ID)
  ON DELETE CASCADE
);

CREATE SEQUENCE CART_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;

CREATE TABLE CART(
  CART_ID NUMERIC DEFAULT NEXTVAL('CART_ID_SEQ') CONSTRAINT CART_PK PRIMARY KEY,
  CUSTOMER_ID VARCHAR(30),
  CREATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CART_STATUS VARCHAR(10) NOT NULL CHECK( CART_STATUS IN ('ACTIVE', 'COMPLETED')),
  CONSTRAINT CART_PK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
  ON DELETE SET NULL
);

CREATE TABLE CART_ITEM(
  SUB_CAT_ID NUMERIC NOT NULL,
  CART_ID NUMERIC NOT NULL, 
  QUANTITY NUMERIC NOT NULL CHECK(QUANTITY>0 AND MOD(QUANTITY,1)=0),
  ORDER_SPECIFICATION VARCHAR (500),
  CONSTRAINT CART_ITEM_PK PRIMARY KEY (SUB_CAT_ID,CART_ID),
  CONSTRAINT CART_ITEM_FK1 FOREIGN KEY (SUB_CAT_ID) REFERENCES DISH_SUB_CATEGORY(SUB_CAT_ID)
  ON DELETE CASCADE,
  CONSTRAINT CART_ITEM_FK2 FOREIGN KEY (CART_ID) REFERENCES CART(CART_ID)
  ON DELETE CASCADE
);

CREATE TABLE ORDER_(
  ORDER_ID NUMERIC CONSTRAINT ORDER_PK PRIMARY KEY,
  DELIVERY_METHOD VARCHAR(20) NOT NULL CHECK (DELIVERY_METHOD IN('PICKUP', 'HOME-DELIVERY')),
  ORDER_STATUS VARCHAR(25) NOT NULL CHECK (ORDER_STATUS IN('PENDING', 'RESTAURANT_RECEIVED','RIDER_PICKED', 'CUSTOMER_RECEIVED','ORDER_CANCELED')), 
  SUB_DIST_ID NUMERIC,
  PROPOSED_DELIVERY_TIME TIMESTAMP,
  DETAILED_ADDRESS VARCHAR(500),
  CONSTRAINT ORDER_FK1 FOREIGN KEY (ORDER_ID ) REFERENCES CART(CART_ID )
  ON DELETE CASCADE,
  CONSTRAINT ORDER_FK2 FOREIGN KEY (SUB_DIST_ID ) REFERENCES SUB_DISTRICT(SUB_DIST_ID )
  ON DELETE SET NULL
);

CREATE SEQUENCE DELIVERY_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;
  
CREATE TABLE DELIVERY(
  DELIVERY_ID NUMERIC DEFAULT  NEXTVAL('DELIVERY_ID_SEQ') CONSTRAINT DELIVERY_PK PRIMARY KEY,
  ORDER_ID NUMERIC,
  RIDER_ID VARCHAR(30) NOT NULL,
  DELIVERY_CHARGE NUMERIC NOT NULL CHECK (DELIVERY_CHARGE>=0),
  DELIVERY_STATUS VARCHAR(15) NOT NULL CHECK(DELIVERY_STATUS IN ('ON_DELIVERY', 'DELIVERED')),
  CONSTRAINT DELIVERY_FK1 FOREIGN KEY (ORDER_ID ) REFERENCES ORDER_(ORDER_ID)
  ON DELETE SET NULL,
  CONSTRAINT DELIVERY_FK2 FOREIGN KEY (RIDER_ID) REFERENCES RIDER(RIDER_ID)
  ON DELETE CASCADE
);

CREATE SEQUENCE PAYMENT_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;


CREATE TABLE PAYMENT (
  PAYMENT_ID NUMERIC DEFAULT  NEXTVAL('PAYMENT_ID_SEQ') CONSTRAINT PAYMENT_PK PRIMARY KEY,
  ORDER_ID NUMERIC,
  PAYMENT_METHOD VARCHAR(10) NOT NULL CHECK (PAYMENT_METHOD IN ('COD', 'ONLINE')),
  PAYMENT_STATUS VARCHAR(20) NOT NULL CHECK (PAYMENT_STATUS IN ('NOT PAID', 'PARTIALLY_PAID', 'RIDER_PAID', 'RESTAURANT_PAID')),
  PAYMENT_AMOUNT NUMERIC NOT NULL CHECK (PAYMENT_AMOUNT >= 0),

  CONSTRAINT PAYMENT_FK1 FOREIGN KEY (ORDER_ID) REFERENCES ORDER_(ORDER_ID)
  ON DELETE SET NULL
);

CREATE SEQUENCE COUPON_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;


CREATE TABLE COUPON(
  COUPON_ID NUMERIC DEFAULT  NEXTVAL('COUPON_ID_SEQ') CONSTRAINT COUPON_PK PRIMARY KEY,
  COUPON_TYPE VARCHAR(20) NOT NULL CHECK (COUPON_TYPE IN('UNIVERSAL', 'RESTAURANT')),
  REST_ID VARCHAR(30),
  DESCRIPTION VARCHAR(500) NOT NULL,
  DISCOUNT_TYPE VARCHAR(20) NOT NULL CHECK(DISCOUNT_TYPE IN('FLAT', 'PERCENT')),
  DISCOUNT NUMERIC NOT NULL CHECK(DISCOUNT>0),
  UPPER_LIMIT NUMERIC NOT NULL,
  START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  END_TIME TIMESTAMP NOT NULL,
  USAGE_LIMIT NUMERIC NOT NULL,
  PER_USER_USE_LIMIT NUMERIC NOT NULL,
  PRICE NUMERIC NOT NULL CHECK(PRICE>=0),
  CONSTRAINT COUPON_FK1 FOREIGN KEY (REST_ID) REFERENCES RESTAURANT(REST_ID) 
  ON DELETE CASCADE,
  CONSTRAINT COUPON_REST_ID_REQUIRED CHECK (
    (COUPON_TYPE = 'RESTAURANT' AND REST_ID IS NOT NULL) OR
    (COUPON_TYPE = 'UNIVERSAL' AND REST_ID IS NULL)
  )
);

CREATE TABLE CUSTOMER_COUPON(
  COUPON_ID NUMERIC NOT NULL,
  CUSTOMER_ID VARCHAR(30) NOT NULL,
  USE_COUNT NUMERIC NOT NULL CHECK(USE_COUNT>=0 AND MOD(USE_COUNT,1)=0),
  CONSTRAINT CUSTOMER_COUPON_PK PRIMARY KEY (COUPON_ID,CUSTOMER_ID),
  CONSTRAINT CUSTOMER_COUPON_FK1 FOREIGN KEY (COUPON_ID) REFERENCES COUPON(COUPON_ID)
  ON DELETE CASCADE,
  CONSTRAINT CUSTOMER_COUPON_FK2 FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
  ON DELETE CASCADE
);

CREATE SEQUENCE REVIEW_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;

CREATE TABLE REVIEW (
  REVIEW_ID NUMERIC DEFAULT  NEXTVAL('REVIEW_ID_SEQ') CONSTRAINT REVIEW_PK PRIMARY KEY,
  CUSTOMER_ID VARCHAR(30) NOT NULL,
  REVIEW_TYPE VARCHAR(15) NOT NULL CHECK(REVIEW_TYPE IN('SYSTEM', 'RESTAURANT', 'DISH')),
  REST_ID VARCHAR(30),
  DISH_ID NUMERIC,
  REVIEW_TEXT VARCHAR(1000),
  RATING NUMERIC NOT NULL CHECK(RATING>=0 AND RATING<=5),
  REVIEW_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT REVIEW_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
  ON DELETE CASCADE,
  CONSTRAINT REVIEW_FK2 FOREIGN KEY (REST_ID) REFERENCES RESTAURANT(REST_ID)
  ON DELETE CASCADE,
  CONSTRAINT REVIEW_FK3 FOREIGN KEY (DISH_ID) REFERENCES DISH(DISH_ID)
  ON DELETE CASCADE,
  CONSTRAINT REVIEW_CONSTRAINTS CHECK(
    (REVIEW_TYPE= 'SYSTEM' AND REST_ID IS NULL AND DISH_ID IS NULL) OR
    (REVIEW_TYPE= 'RESTAURANT' AND REST_ID IS NOT NULL AND DISH_ID IS NULL) OR
    (REVIEW_TYPE= 'DISH' AND DISH_ID IS NOT NULL) 
  )
);


CREATE SEQUENCE WALLET_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;

CREATE TABLE WALLET(
  WALLET_ID NUMERIC DEFAULT  NEXTVAL('WALLET_ID_SEQ') CONSTRAINT WALLET_PK PRIMARY KEY,
  USER_ID VARCHAR(30) NOT NULL,
  BALANCE NUMERIC NOT NULL CHECK(BALANCE>=0),
  CONSTRAINT WALLET_FK1 FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
  ON DELETE CASCADE
);

CREATE TABLE CARD(
  CARD_NO VARCHAR(20) CONSTRAINT CARD_NO_VALID CHECK (REGEXP_LIKE(CARD_NO, '^\d{16}$')) CONSTRAINT CARD_PK PRIMARY KEY,
  WALLET_ID NUMERIC NOT NULL,
  EXPIRY_DATE TIMESTAMP NOT NULL,
  CARD_HOLDER_NAME VARCHAR(50) NOT NULL,
  CARD_TYPE VARCHAR(20) NOT NULL CHECK( CARD_TYPE IN ('VISA', 'MASTERCARD', 'OTHER')),
  CONSTRAINT CARD_FK1 FOREIGN KEY (WALLET_ID) REFERENCES WALLET(WALLET_ID)
  ON DELETE CASCADE
);

CREATE SEQUENCE MESSAGE_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;

CREATE TABLE MESSAGE(
  MESSAGE_ID NUMERIC DEFAULT  NEXTVAL('MESSAGE_ID_SEQ') CONSTRAINT MESSAGE_PK PRIMARY KEY,
  SENDER_ID VARCHAR(30) NOT NULL,
  RECIPIENT_ID VARCHAR(30) NOT NULL,
  MSG_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  MESSAGE_TEXT VARCHAR(1000) NOT NULL,
  CONSTRAINT MESSAGE_FK1 FOREIGN KEY(SENDER_ID) REFERENCES USERS(USER_ID)
  ON DELETE CASCADE,
  CONSTRAINT MESSAGE_FK2 FOREIGN KEY(RECIPIENT_ID) REFERENCES USERS(USER_ID)
  ON DELETE CASCADE
);

CREATE SEQUENCE COMPLAINT_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;


CREATE TABLE COMPLAINT(
  COMPLAINT_ID NUMERIC DEFAULT  NEXTVAL('COMPLAINT_ID_SEQ') CONSTRAINT COMPLAINT_PK PRIMARY KEY,
  COMPLAINER_ID VARCHAR(30) NOT NULL,
  ACCUSED_ID VARCHAR(30) NOT NULL,
  COMPLAIN_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  COMPLAIN_TEXT VARCHAR(1000) NOT NULL,
  CONSTRAINT COMPLAINT_FK1 FOREIGN KEY(COMPLAINER_ID) REFERENCES USERS(USER_ID)
  ON DELETE CASCADE,
  CONSTRAINT COMPLAINT_FK2 FOREIGN KEY(ACCUSED_ID) REFERENCES USERS(USER_ID)
  ON DELETE CASCADE
);

CREATE SEQUENCE PENALTY_ID_SEQ
START WITH 1
MAXVALUE 1000000000
NO CYCLE;

CREATE TABLE PENALTY(
  PENALTY_ID NUMERIC DEFAULT  NEXTVAL('PENALTY_ID_SEQ') CONSTRAINT PENALTY_PK PRIMARY KEY,
  DESCRIPTION VARCHAR(4000) NOT NULL,
  FINE NUMERIC,
  PENALTY_DEADLINE TIMESTAMP
);

CREATE TABLE COMPLAINT_PENALTY_LINKER(
  COMPLAINT_ID NUMERIC NOT NULL,
  PENALTY_ID NUMERIC NOT NULL,
  CONSTRAINT COMPLAINT_PENALTY_LINKER_PK PRIMARY KEY (COMPLAINT_ID,PENALTY_ID),
  CONSTRAINT COMPLAINT_PENALTY_LINKER_FK1 FOREIGN KEY (COMPLAINT_ID) REFERENCES COMPLAINT(COMPLAINT_ID)
  ON DELETE CASCADE,
  CONSTRAINT COMPLAINT_PENALTY_LINKER_FK2 FOREIGN KEY (PENALTY_ID) REFERENCES PENALTY(PENALTY_ID)
  ON DELETE CASCADE  
);

-- DROP TABLE COMPLAINT_PENALTY_LINKER;
-- DROP TABLE PENALTY;
-- DROP TABLE COMPLAINT;
-- DROP TABLE MESSAGE;
-- DROP TABLE CARD;
-- DROP TABLE WALLET;
-- DROP TABLE REVIEW;
-- DROP TABLE CUSTOMER_COUPON;
-- DROP TABLE COUPON;
-- DROP TABLE PAYMENT;
-- DROP TABLE DELIVERY;
-- DROP TABLE ORDER_;
-- DROP TABLE CART_ITEM;
-- DROP TABLE CART;
-- DROP TABLE DISH_SUB_CATEGORY;
-- DROP TABLE RIDER;
-- DROP TABLE DISH_CATEGORY_LINKER;
-- DROP TABLE DISH;
-- DROP TABLE CATEGORY;
-- DROP TABLE RESTAURANT;
-- DROP TABLE CUSTOMER;
-- DROP TABLE ADMIN;
-- DROP TABLE USERS;
-- DROP TABLE SUB_DISTRICT;
-- DROP TABLE DISTRICT;
-- DROP SEQUENCE SUB_DIST_ID_SEQ;
-- DROP SEQUENCE DISH_ID_SEQ;
-- DROP SEQUENCE SUB_CAT_ID_SEQ;
-- DROP SEQUENCE CART_ID_SEQ;
-- DROP SEQUENCE DELIVERY_ID_SEQ;
-- DROP SEQUENCE PAYMENT_ID_SEQ;
-- DROP SEQUENCE COUPON_ID_SEQ;
-- DROP SEQUENCE REVIEW_ID_SEQ;
-- DROP SEQUENCE WALLET_ID_SEQ;
-- DROP SEQUENCE MESSAGE_ID_SEQ;
-- DROP SEQUENCE COMPLAINT_ID_SEQ;
-- DROP SEQUENCE PENALTY_ID_SEQ ;